- ask if input is valid -> ex if binary tree, ask if binary tree exists and is a valid tree

- ask if it's ok to modify input array -> ex if 2d array like Number of Islands should I use visit set or can I modify input array directly
-- modify input array to set visited island to 0
-- discuss pros and cons
--- places where in-place algorithms might cause problems:
---- algorithm needs to run in a multi-threaded environment without exclusive access to the array. Other threads might need to read the array as well and may not expect it to be modified.
---- even if there is only a single thread or the algorithm has exclusive access to the array while running, the array might need to be reused later or by another thread once the lock
     has been released.

- for graphs and linked lists, make sure to ask that I can assume there are no cycles/loops
-- for graphs, also ask to make sure input is valid like there are no negative weights etc

- for questions with integer addition or multiplication, ask to make sure that I can assume no integer overflow
-- ask if I can assume all intermediate calculations will also not overflow in the process -> useful for binary search when using (l + r) // 2
-- for any questions that require division, ask to make sure that I can assume that there will be no division by 0

- for questions where input number is a string
-- ask about existence of leading 0s
-- ask if I can convert the entire number to an int without overflow
--- or if I should solve using pointers

- ask for question constraints
-- like array length
-- all numbers are unique
-- all positive numbers or if negative numbers are also included